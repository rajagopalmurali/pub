name: Deploy PHP App to AWS EC2

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AWS_REGION: ap-south-1
  INSTANCE_TYPE: t2.micro
  KEY_NAME: github-actions-php-key
  AMI_ID: ami-02d26659fd82cf299

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup AWS infrastructure
      id: aws-setup
      env:
        AWS_REGION: ${{ env.AWS_REGION }}
        INSTANCE_TYPE: ${{ env.INSTANCE_TYPE }}
        KEY_NAME: ${{ env.KEY_NAME }}
        AMI_ID: ${{ env.AMI_ID }}
      run: |
        chmod +x .github/workflows/scripts/aws-setup.sh
        .github/workflows/scripts/aws-setup.sh
        
    - name: Wait for SSH access
      run: |
        echo "Waiting for SSH access..."
        for i in {1..30}; do
          if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ${{ env.KEY_NAME }}.pem ubuntu@${{ steps.aws-setup.outputs.public_ip }} "echo 'SSH ready'"; then
            echo "SSH access confirmed"
            break
          fi
          echo "Attempt $i: SSH failed, waiting 10 seconds..."
          sleep 10
        done
        
    - name: Deploy PHP application
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        PUBLIC_IP: ${{ steps.aws-setup.outputs.public_ip }}
      run: |
        # Copy deployment scripts to instance
        scp -i ${{ env.KEY_NAME }}.pem -o StrictHostKeyChecking=no \
          .github/workflows/scripts/deploy-php.sh \
          .github/workflows/scripts/create-index.sh \
          ubuntu@${{ steps.aws-setup.outputs.public_ip }}:~/
        
        # Run deployment scripts with environment variables
        ssh -i ${{ env.KEY_NAME }}.pem -o StrictHostKeyChecking=no \
          ubuntu@${{ steps.aws-setup.outputs.public_ip }} \
          "export GITHUB_REPOSITORY='${{ github.repository }}' && export PUBLIC_IP='${{ steps.aws-setup.outputs.public_ip }}' && chmod +x ~/deploy-php.sh ~/create-index.sh && ~/deploy-php.sh && ~/create-index.sh"
        
    - name: Output deployment info
      run: |
        echo "üöÄ PHP application deployment completed successfully!"
        echo "üì± Application URL: http://${{ steps.aws-setup.outputs.public_ip }}"
        echo "üîë Instance ID: ${{ steps.aws-setup.outputs.instance_id }}"
        echo "üåç Region: ${{ env.AWS_REGION }}"
        echo ""
        echo "Database Information:"
        echo "  Database: php_app_db"
        echo "  Username: php_user"
        echo "  Password: php_password_123"
        echo "  Host: localhost (on EC2 instance)"
        echo ""
        echo "To access your instance via SSH:"
        echo "ssh -i ${{ env.KEY_NAME }}.pem ubuntu@${{ steps.aws-setup.outputs.public_ip }}"
        
    - name: Cleanup key file
      if: always()
      run: rm -f ${{ env.KEY_NAME }}.pem

  cleanup:
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Cleanup AWS resources
      env:
        AWS_REGION: ${{ env.AWS_REGION }}
        KEY_NAME: ${{ env.KEY_NAME }}
        INSTANCE_ID: ${{ needs.deploy.outputs.instance_id }}
      run: |
        chmod +x .github/workflows/scripts/cleanup.sh
        .github/workflows/scripts/cleanup.sh
